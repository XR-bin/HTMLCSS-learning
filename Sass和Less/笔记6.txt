1. Sass 和 Less

        Sass和Less都属于CSS预处理器，CSS 预处理器
    定义了一种新的语言，其基本思想是，用一种专门的
    编程语言，为 CSS 增加了一些编程的特性，如：变量
    、语句、函数、继承等概念。将 CSS 作为目标生成文
    件，然后开发者就只要使用这种语言进行CSS的编码工
    作。

    VSCode插件：
        1) Easy LESS
        2) Easy Sass

    官网
        1) http://lesscss.org/
        2) https://sass-lang.com/

    【注意】sass的后缀有两种(.sass和.scss)，现在我们都用新写法.scss


    Sass和Less的共同点
        1)  //单行注释不会被编译    /* */多行注释会被注释
        2) 支持选择器嵌套编写
        3) 伪类选择器写法 &+伪类选择器
        4) 选择器内部赋值不会影响全局变量原来的值
        5) 支持加减乘除, 但进行除法操作时要用()括起来
        6) 都支持一些数学函数
        7) 通过嵌入的选择器内部的方式添加@media
        8) 通过@import ，引入外部scss/less

    Sass和Less的差异点
        Sass：
            1) 通过$定义变量
            2) 当引用变量时，
               如果是选择器或属性名引用则通过 #{变量名}
               如果是属性值引用则通过 $变量名
            3) 在选择器内部，如果变量有赋值操作依然按从上到下的顺序执行，不会提前处理赋值操作
            4) sass是支持属性嵌套的写法
            5) 进行运算操作时，如果都有单位，但单位不同,则会报错
            6) 支持自定义函数
            7) 通过@mixin实现，支持定义类似C语言的define的变量，并且支持传传参数，但必须要通过@include
            8) 没有类似对象的操作
            9) 通过% 和 @extend 实现 共同设置CSS(.line,.box10,box11)
            10) 通过map-values();，属性值合并，但之间用，隔开
                通过zip(map-values()...)，属性值合并，但之间没有，隔开
            11) 通过if else 实现选择操作
            12) 通过 @for ... from ... through ... 实现循环操作

        Less：
            1) 通过@定义变量
            2) 当引用变量时，
               如果是选择器或属性名引用则通过 @{变量名}
               如果是属性值引用则通过 @变量名
            3) 在选择器内部，变量有赋值会先进行赋值操作，再进行替换
            4) less是没有这种属性嵌套的写法
            5) 进行运算操作时，如果都有单位，但单位不同，会以第一个数的单位作为结果单位
            6) 不支持自定义函数
            7) 通过.实现，支持定义类似C语言的define的变量，并且支持传传参数，直接可以引用
            8) 通过#实现，支持对象操作
            9) 通过&:extend() 实现 共同设置CSS(.line,.box10,box11)
            10) 通过+，属性值合并，但之间用，隔开
                通过+_，属性值合并，但之间没有，隔开
            11) 通过when实现选择操作
            12) 循环操作， 通过递归函数的方式实现



2. CSS新特性
    1) 自定义属性
        CSS 自定义属性(也称为“CSS 变量”)，在目前所有的现代浏览器中都得到了支持。
        通过:root定义变量
        通过var()引用变量

    2) shape属性
        Shape布局可以实现不规则的文字环绕效果，需要和浮动配合使用。

    3) scrollbar属性
        scrollbar用于实现自定义滚动条样式。

    4) Scroll Snap属性
        Scroll Snap（CSS 滚动捕捉）允许你在用户完成滚动后多锁定特定的元素或位置。
